import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

#loading the dataset to a pandas dataframe
sonar_data = pd.read_csv('/content/Copy of sonar data.csv', header=None)

#number of rows and columns 
sonar_data.shape

sonar_data[60].value_counts() 
sonar_data.groupby(60).mean()
#seperating data and labels
X = sonar_data.drop(columns=60, axis=1) #storing all the values except the last columns 
Y=sonar_data[60] #storing the last column
print(X)
print(Y)
X_train , X_test , Y_train, Y_test = train_test_split(X , Y , test_size = 0.1, stratify= Y, random_state=1)
print(X.shape , X_train.shape, X_test.shape)
model = LogisticRegression()
#training the logistic regression model with training data
model.fit(X_train, Y_train)
#accuracy on training data
X_train_prediction = model.predict(X_train)
training_data_accuracy=accuracy_score(X_train_prediction,Y_train)
print('Accuracy on training data : ',training_data_accuracy)
#accuracy on test data
X_test_prediction = model.predict(X_test)
test_data_accuracy=accuracy_score(X_test_prediction,Y_test)
print('Accuracy on test data : ',test_data_accuracy)
input_data = (0.0629,0.1065,0.1526,0.1229,0.1437,0.1190,0.0884,0.0907,0.2107,0.3597,0.5466,0.5205,0.5127,0.5395,0.6558,0.8705,0.9786,0.9335,0.7917,0.7383,0.6908,0.3850,0.0671,0.0502,0.2717,0.2839,0.2234,0.1911,0.0408,0.2531,0.1979,0.1891,0.2433,0.1956,0.2667,0.1340,0.1073,0.2023,0.1794,0.0227,0.1313,0.1775,0.1549,0.1626,0.0708,0.0129,0.0795,0.0762,0.0117,0.0061,0.0257,0.0089,0.0262,0.0108,0.0138,0.0187,0.0230,0.0057,0.0113,0.0131)

#converting into a numpy array
input_data_as_numpy_array = np.asarray(input_data)
#reshape the numpy array
input_data_reshape = input_data_as_numpy_array.reshape(1,-1)

prediction = model.predict(input_data_reshape)
#print(prediction)

if(prediction[0]=='R'):
  print('the object is a rock')
else:
  print('the object is a mine')  
